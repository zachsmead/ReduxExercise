// In this reducer, the state argument is not application state,
// but rather only the state that this reducer is responsible for.

// In other words, the piece of state that this reducer makes available to the rest of the app,
// is also the only input that it receives, the only input it cares about.

// So for example, in reducers/index.js, the value for 'books:' is determined
// by booksReducer. The state that gets passed into booksReducer is only 
// the state that was previously generated by booksReducer. So whenever an action occurs,
// the same state that these reducers generated before gets passed back into the reducers.



export default function(state = null, action) {
	switch(action.type) {
	case 'BOOK_SELECTED':
		return action.payload;
	}
	return state
}